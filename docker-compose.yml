version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: presentsimple_tg_bot
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app:delegated
    networks:
      - backend
    command: >
      sh -c "python tg/run.py"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: presentsimple_django_app
    restart: unless-stopped
    depends_on:
      redis:
          condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app:delegated
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
    command: >
      bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"

#  db:
#    image: postgres:17
#    restart: always
#    env_file:
#      - .env
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#    expose:
#      - "5432"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#    networks:
#      - backend

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 5
    networks:
      - backend


volumes:
  pg_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
